// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }


import "./globals.css";
import { Inter, Poppins } from 'next/font/google'
import CustomCursor from '../app/components/CustomCursor'
import { Metadata } from 'next'

const inter = Inter({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-inter',
})

const poppins = Poppins({
  weight: ['400', '500', '600', '700'],
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-poppins',
})

export const metadata: Metadata = {
  title: 'AI vs Human: The Future of Content Creation',
  description: 'Explore the future of content creation and the roles of AI and humans in shaping the creative landscape.',
  keywords: 'AI, content creation, artificial intelligence, human creativity, future of work',
  openGraph: {
    title: 'AI vs Human: The Future of Content Creation',
    description: 'Explore the future of content creation and the roles of AI and humans in shaping the creative landscape.',
    url: 'https://ai-vs-human.vercel.app',
    siteName: 'AI vs Human',
    images: [
      {
        url: '/images/og-image.jpg',
        width: 1200,
        height: 630,
        alt: 'AI vs Human: The Future of Content Creation',
      },
    ],
    locale: 'en_US',
    type: 'website',
  },
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en" className={`${inter.variable} ${poppins.variable}`}>
      <body className="bg-primary text-white relative min-h-screen">
        <CustomCursor />
        {children}
      </body>
    </html>
  )
}